definitions:
  models.CheckResponse:
    properties:
      chack:
        type: boolean
    type: object
  models.CreateOwner:
    properties:
      avatar:
        type: string
      company_name:
        type: string
      email:
        type: string
      full_name:
        type: string
      password:
        type: string
      tax:
        type: string
    type: object
  models.CreateProduct:
    properties:
      categoryId:
        type: integer
      description:
        type: string
      discount:
        type: integer
      picture:
        type: string
      price:
        type: integer
      title:
        type: string
    type: object
  models.Error:
    properties:
      message:
        type: string
    type: object
  models.Owner:
    properties:
      avatar:
        type: string
      company_name:
        type: string
      createdAt:
        type: string
      email:
        type: string
      full_name:
        type: string
      id:
        type: string
      password:
        type: string
      tax:
        type: string
      updatedAt:
        type: string
    type: object
  models.Product:
    properties:
      categoryId:
        type: integer
      createdAt:
        type: string
      description:
        type: string
      discount:
        type: integer
      id:
        type: integer
      picture:
        type: string
      price:
        type: integer
      title:
        type: string
      updatedAt:
        type: string
    type: object
  models.ProductList:
    properties:
      products:
        items:
          $ref: '#/definitions/models.Product'
        type: array
    type: object
  models.StandartError:
    properties:
      error:
        $ref: '#/definitions/models.Error'
    type: object
  models.UpdateOwner:
    properties:
      avatar:
        type: string
      company_name:
        type: string
      email:
        type: string
      full_name:
        type: string
      id:
        type: string
      password:
        type: string
      tax:
        type: string
    type: object
  models.UpdateProduct:
    properties:
      categoryId:
        type: integer
      description:
        type: string
      discount:
        type: integer
      id:
        type: integer
      picture:
        type: string
      price:
        type: integer
      title:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: wcrm-system
  title: WCRM
  version: "1.0"
paths:
  /v1/owner/create:
    post:
      consumes:
      - application/json
      description: Api for create owner
      parameters:
      - description: Create Owner
        in: body
        name: Product
        required: true
        schema:
          $ref: '#/definitions/models.CreateOwner'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Owner'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.StandartError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandartError'
      summary: Create Owner
      tags:
      - Owner
  /v1/owner/delete/{id}:
    delete:
      consumes:
      - application/json
      description: Api for delete product
      parameters:
      - description: Id Owner
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CheckResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.StandartError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandartError'
      summary: Delete Owner
      tags:
      - Owner
  /v1/owner/get/{id}:
    get:
      consumes:
      - application/json
      description: Api for get product
      parameters:
      - description: Id Owner
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Owner'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.StandartError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandartError'
      summary: Get Owner
      tags:
      - Owner
  /v1/owner/update:
    put:
      consumes:
      - application/json
      description: Api for update product
      parameters:
      - description: Update Owner
        in: body
        name: Owner
        required: true
        schema:
          $ref: '#/definitions/models.UpdateOwner'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Owner'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandartError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandartError'
      summary: Update Owner
      tags:
      - Owner
  /v1/owners/get:
    get:
      consumes:
      - application/json
      description: Api for get all product
      parameters:
      - description: Page Owner
        in: path
        name: page
        required: true
        type: string
      - description: Limit Owner
        in: path
        name: limit
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ProductList'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.StandartError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandartError'
      summary: Get List Owner
      tags:
      - Owner
  /v1/product/create:
    post:
      consumes:
      - application/json
      description: Api for create product
      parameters:
      - description: Create Product
        in: body
        name: Product
        required: true
        schema:
          $ref: '#/definitions/models.CreateProduct'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.StandartError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandartError'
      summary: Create Product
      tags:
      - Product
  /v1/product/delete/{id}:
    delete:
      consumes:
      - application/json
      description: Api for delete product
      parameters:
      - description: Id Product
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CheckResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.StandartError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandartError'
      summary: Delete Product
      tags:
      - Product
  /v1/product/get/{id}:
    get:
      consumes:
      - application/json
      description: Api for get product
      parameters:
      - description: Id Product
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.StandartError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandartError'
      summary: Get Product
      tags:
      - Product
  /v1/product/update:
    put:
      consumes:
      - application/json
      description: Api for update product
      parameters:
      - description: Update Product
        in: body
        name: Product
        required: true
        schema:
          $ref: '#/definitions/models.UpdateProduct'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandartError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandartError'
      summary: Update Product
      tags:
      - Product
  /v1/products/get:
    get:
      consumes:
      - application/json
      description: Api for get all product
      parameters:
      - description: Page Product
        in: path
        name: page
        required: true
        type: string
      - description: Limit Product
        in: path
        name: limit
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ProductList'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.StandartError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandartError'
      summary: Get List Product
      tags:
      - Product
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
