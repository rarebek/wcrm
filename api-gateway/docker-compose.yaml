version: '3.8'
services:
  wcrmdb:
    container_name: db
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: asadbek
      PGDATA: /data/postgres
      POSTGRES_DB: wcrmdb
    volumes:
      - db:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - db
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d postgres" ]
      interval: 30s
      timeout: 10s
      retries: 5


  user-service:
    container_name: user-service
    build: ./user-service
    depends_on: 
      - "wcrmdb"
    ports:
      - "2222:2222"
    networks:
      - db
      
      
  migrate:
    image: migrate/migrate
    networks:
      - db
    volumes:
      - ./migrations:/migrations
    command: ["-path", "/migrations", "-database",  "postgres://postgres:asadbek@db:5432/wcrmdb?sslmode=disable", "up"]
   # depends_on:
    #  - db


  order-service:
    container_name: order-service
    build: ./order-service
    depends_on: 
      - "wcrmdb"
    ports:
      - "3333:3333"
    networks:
      - db
  
  product-service:
    container_name: product-service
    build: ./product-service
    depends_on:
      - "wcrmdb"
    ports:
      - "1111:1111"
    networks:
      - db


  api-gateway:
    build: ./api-gateway
    depends_on:
      - order-service
      - user-service
      - wcrmdb
      - product-service
    #  - migrate
    ports:
      - "8080:8080"
    restart: unless-stopped
    networks:
      - db

#
#  migrate:
#    image: migrate/migrate
#    networks:
#      - db
#    volumes:
#      - ./migrations:/migrations
#    command: [ "-path", "/migrations", "-database",  "postgres://postgres:123@db:5432/userdb?sslmode=disable", "up","1"]
#    links:
#      - userdb
#    depends_on:
#      - "userdb"

  redis:
    container_name: redis
    image: redis
    ports:
      - "6279:6279"
    networks:
      - db

networks:
  db:
    driver: bridge

volumes:
  db:


